#!/bin/zsh

# itunes controlling function 
#
# Copyright (C) 2004 Stefan Pfetzing
#
# based on an itunes shell script by Lewis Butler <lbutler@southgaylord.com>
# based on an idea of Erik J. Barzeski's  <erik@barzeski.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA.
#
# TODO: write completion function! (easy task)
#

function itunes_control() {
	local VERSION=0.1

	if [ "$OSTYPE" != "darwin7.0" ]; then
		return 0
	fi

	zparseopts -A command_opts -- -next-track nt -previous-track pt -info -help h -fast-forward ff \
		-pause -play -play-pause pp  -name-search: ns: -album-search: as: -name-artist: \
		na:- -quit V --version

	if [ $#command_opts != 1 ];then
		typeset -A command_opts
		set -A command_opts --help blah
 	fi

	for command_opt in ${(k)command_opts}; do
		case $command_opt in
			-nt|--next-track)
				osascript \
					-e "tell application \"iTunes\""  \
					-e "    set x to \"\"" \
					-e "    if player state is not playing then" \
					-e "        play" \
					-e "        set y to name of current track & \" by \" & artist of current track & \"\"" \
					-e "        set result to  y" \
					-e "    else" \
					-e "        next track" \
					-e "        set y to name of current track & \" by \" & artist of current track & \"\"" \
					-e "        set result to y" \
					-e "    end if" \
					-e "end tell" 
				;;

			-pt|--previous-track)
				osascript \
					-e "tell application \"iTunes\""  \
					-e "    set x to \"\"" \
					-e "    if player state is not playing then" \
					-e "        play" \
					-e "        set y to name of current track & \" by \" & artist of current track & \"\"" \
					-e "        set result to  y" \
					-e "    else" \
					-e "        previous track" \
					-e "        set y to name of current track & \" by \" & artist of current track & \"\"" \
					-e "        set result to y" \
					-e "    end if" \
					-e "end tell" 
				;;

			--info)
				osascript \
					-e "tell application \"iTunes\"" \
					-e "  if player state is not playing then "\
					-e  "    set result to \"iTunes is not playing a song\"" \
					-e "  else" \
					-e "    set x to name of current track & \" by \" & artist of current track & \" from \" & album of current track & \"\"" \
					-e "    set result to x " \
					-e "  end if" \
					-e "end tell"
				;;

			-ff|--fast-forward)
				osascript \
					-e "tell application \"iTunes\"" \
					-e "  fast forward" \
					-e "end tell"
				;;

			--pause)
				osascript \
					-e "tell application \"iTunes\" to pause" 
				;;

			--play)
				osascript \
					-e "tell application \"iTunes\" to play" 
				;;

			-pp|--play-pause)
				osascript \
					-e "tell application \"iTunes\" to playpause"
				;;

			-ns|--name-search)
				osascript \
					-e "tell application \"iTunes\"" \
					-e "  set mytrack to (first track of view of front window whose name contains \""$command_opts[$command_opt]"\")" \
					-e "  play mytrack" \
					-e "    set x to name of current track & \" by \" & artist of current track & \"\"" \
					-e "    set result to x " \
					-e "end tell"
				;;

			-as|--album-search)
				osascript \
					-e "tell application \"iTunes\"" \
					-e "  set mytrack to (first track of view of front window whose album contains \""$command_opts[$command_opt]"\")" \
					-e "  play mytrack" \
					-e "    set x to name of current track & \" by \" & artist of current track & \"\"" \
					-e "    set result to x " \
					-e "end tell"
				;;

			-na|--name-artist)
				osascript \
					-e "tell application \"iTunes\"" \
					-e "  set mytrack to (first track of view of front window whose (name contains \""${command_opts[$command_opt]/\/*}"\" and artist contains \""${command_opts[$command_opt]/*\/}"\"))" \
					-e "  play mytrack" \
					-e "    set x to name of current track & \" by \" & artist of current track & \"\"" \
					-e "    set result to x " \
					-e "end tell"
				;;


			--quit)
				osascript \
					-e "tell application \"iTunes\"" \
					-e "  quit" \
					-e "end tell"
				;;

			--help)
				cat << EOF
Usage: itunes_control [OPTION]
Remote (command line) control for iTunes.

OPTION can be one of:

-pp, --play-pause		toggle iTunes between play and pause
-nt, --next-track		play the next track
-pt, --previous-track		play the previous track
-ff, --fast-forward		fast forward
--pause				pause playing
--info				display the name of the current track being played
--play				start playing 
-ns, --name-search=NAME		find song containing "NAME" and play
-as, --album-search=ALBUM	find album containing "ALBUM" and play
-na, --name-artist=NAME/ARTIST	find song containing "NAME" and artist "ARTIST"
				both given as one parameter, seperated by a /
--quit				quit iTunes
-h, --help			display this help
EOF
				;;
			-V|--version)
				cat << EOF
itunes_control $VERSION
Written by Stefan Pfetzing.

Copyright (C) 2004 Stefan Pfetzing <dreamind@dreamind.de>
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
EOF
				;;
		esac
	done
}
